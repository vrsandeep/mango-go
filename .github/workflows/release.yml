name: GitHub Actions Release

on:
  push:
    tags:
      - 'v*.*.*'


jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-latest', 'macos-latest']
        arch: [amd64, arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.4'
          cache-dependency-path: go.sum

      - name: Install dependencies (Ubuntu)
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.arch == 'amd64' }}
        run: sudo apt-get update && sudo apt-get install -y libsqlite3-dev make gcc libc6-dev

      - name: Install dependencies (Ubuntu arm64)
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.arch == 'arm64' }}
        shell: bash
        run: |
          # Ubuntu has ARM64 packages in an entirely different repo, so we can't just
          # `dpkg --add-architecture arm64` here: we have to add a custom sources.list first.
          sudo tee /etc/apt/sources.list.d/ubuntu.sources <<EOF > /dev/null
          Types: deb
          URIs: http://azure.archive.ubuntu.com/ubuntu/
          Suites: noble noble-updates noble-backports
          Components: main universe restricted multiverse
          Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg
          Architectures: amd64

          Types: deb
          URIs: http://azure.ports.ubuntu.com/ubuntu-ports/
          Suites: noble noble-updates noble-backports
          Components: main universe restricted multiverse
          Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg
          Architectures: arm64
          EOF

          sudo dpkg --add-architecture arm64
          sudo apt-get update -y

          sudo apt-get install -y gcc-aarch64-linux-gnu \
            libc6-arm64-cross qemu-user-binfmt libc6:arm64 libsqlite3-dev make

      - name: Install dependencies (macOS)
        if: ${{ matrix.os == 'macos-latest' }}
        run: brew update && brew install sqlite

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install esbuild
        run: npm install -g esbuild

      - name: Build assets
        run: make assets

      - name: Build linux binaries
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          mkdir -p build
          go build \
              -ldflags="-s -w -X main.version=${{ github.ref_name }} -X main.commit=${{ github.sha }} -X main.date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
              -o build/mango-go-${{ matrix.os }}-${{ matrix.arch }} \
              .
        env:
          GOOS: linux
          CGO_ENABLED: 1
          GOARCH: ${{ matrix.arch }}
          CC: ${{ matrix.arch == 'arm64' && 'aarch64-linux-gnu-gcc' || 'gcc' }}

      - name: Build darwin binaries
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          mkdir -p build
          go build \
            -ldflags="-s -w -X main.version=${{ github.ref_name }} -X main.commit=${{ github.sha }} -X main.date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
            -o build/mango-go-${{ matrix.os }}-${{ matrix.arch }} \
            .
        env:
          GOOS: darwin
          CGO_ENABLED: 1
          GOARCH: ${{ matrix.arch }}

      - name: Create release archive
        run: |
          tar -czf build/mango-go-${{ matrix.os }}-${{ matrix.arch }}.tar.gz \
            build/mango-go-${{ matrix.os }}-${{ matrix.arch }} \
            README.md LICENSE

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mango-go-${{ matrix.os }}-${{ matrix.arch }}
          path: build/mango-go-${{ matrix.os }}-${{ matrix.arch }}.tar.gz

  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create checksums
        run: |
          cd mango-go-ubuntu-latest-amd64
          sha256sum *.tar.gz > ../checksums.txt
          cd ../mango-go-ubuntu-latest-arm64
          sha256sum *.tar.gz >> ../checksums.txt
          cd ../mango-go-macos-latest-amd64
          sha256sum *.tar.gz >> ../checksums.txt
          cd ../mango-go-macos-latest-arm64
          sha256sum *.tar.gz >> ../checksums.txt

      - name: Rename files
        run: |
          mkdir -p renamed
          mv mango-go-ubuntu-latest-amd64/mango-go-ubuntu-latest-amd64.tar.gz renamed/mango-go-linux-amd64.tar.gz
          mv mango-go-ubuntu-latest-arm64/mango-go-ubuntu-latest-arm64.tar.gz renamed/mango-go-linux-arm64.tar.gz
          mv mango-go-macos-latest-amd64/mango-go-macos-latest-amd64.tar.gz renamed/mango-go-macos-intel.tar.gz
          mv mango-go-macos-latest-arm64/mango-go-macos-latest-arm64.tar.gz renamed/mango-go-macos-arm64.tar.gz

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            renamed/*.tar.gz
            checksums.txt
          generate_release_notes: true
          tag_name: ${{ github.ref_name }}  # Use the tag version from the pushed tag
          draft: false
          prerelease: false
